name: CMake on a single platform
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  # Customize the conan profile type here (default for build type Release, debug for Debug)
  CONAN_PROFILE: debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule init && git submodule update

    - name: Install checkers
      run: sudo apt-get update && sudo apt-get install -y valgrind clang-format-19 wget unzip lcov

    - name: Build cppcheck
      working-directory: ${{github.workspace}}
      run: sudo scripts/cpp-check install

    # Disabled on github, cppcheck suppression work incorrect, on localhost or docker works correctly
    - name: Source pre-checks cppcheck
      working-directory: ${{github.workspace}}
      run: scripts/cpp-check

    # Another tool is disabled couse something wrong
    - name: Source pre-checks code style
      working-directory: ${{github.workspace}}
      run: scripts/style-check

    - name: Configure conan 
      run: |
        sudo apt-get update && sudo apt-get install -y python3 python3-pip
        python3 -m pip install conan
        conan profile detect --force
        cp ~/.conan2/profiles/default ~/.conan2/profiles/debug && sed -i -e 's/Release/Debug/g' ~/.conan2/profiles/debug

    - name: Build third libraries
      run: conan install . -of ${{github.workspace}}/build -pr ${{env.CONAN_PROFILE}} --build missing

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_CXX_CPPCHECK=/usr/local/bin/cppcheck

    - name: Build
      working-directory: ${{github.workspace}}
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} -T Test -V

    - name: Test coverage
      working-directory: ${{github.workspace}}/build
      run: |
        ctest -C ${{env.BUILD_TYPE}} -T Test -T Coverage
        #lcov --directory build --capture --output-file coverage.info
        #lcov --extract coverage.info '*src/*' -o coverage.info
        #lcov -l coverage.info

    - name: Test benchmark
      working-directory: ${{github.workspace}}
      run: build/src/test/test_bench --benchmark_counters_tabular=true

    - name: Source post-checks memory leaks
      working-directory: ${{github.workspace}}
      run: scripts/mem-check build/src/test/test_sort_keys

