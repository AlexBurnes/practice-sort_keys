name: CMake on a single platform
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  # Customize the conan profile type here (default for build type Release, debug for Debug)
  CONAN_PROFILE: debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure checkers
      run: |
        apt-get update && apt-get install -y cppcheck clang-format valgrind

    - name: Source pre-checks cppcheck
      run: scripts/cpp-check

    - name: Source pre-checks code style
      run: scripts/style-check

    - name: Configure conan 
      run: |
        apt-get update && apt-get install -y python3 python3-pip
        python3 -m pip install conan
        conan profile detect --force
        cp ~/.conan2/profiles/default ~/.conan2/profiles/debug && sed -i -e 's/Release/Debug/g' ~/.conan2/profiles/debug

    - name: Build third libraries
      run: conan install . -of ${{github.workspace}}/build -pr ${{env.CONAN_PROFILE}} --build missing
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} -T Test

    - name: Test coverage
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} -T Coverage
      
    - name: Source post-checks memory leaks
      run: scripts/mem-check


